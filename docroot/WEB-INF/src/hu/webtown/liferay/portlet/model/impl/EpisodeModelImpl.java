/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * The contents of this file are subject to the terms of the Liferay Enterprise
 * Subscription License ("License"). You may not use this file except in
 * compliance with the License. You can obtain a copy of the License by
 * contacting Liferay, Inc. See the License for the specific language governing
 * permissions and limitations under the License, including but not limited to
 * distribution rights of the Software.
 *
 *
 *
 */

package hu.webtown.liferay.portlet.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import hu.webtown.liferay.portlet.model.Episode;
import hu.webtown.liferay.portlet.model.EpisodeModel;
import hu.webtown.liferay.portlet.model.EpisodeSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Episode service. Represents a row in the &quot;TvT_Episode&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link hu.webtown.liferay.portlet.model.EpisodeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EpisodeImpl}.
 * </p>
 *
 * @author czeni
 * @see EpisodeImpl
 * @see hu.webtown.liferay.portlet.model.Episode
 * @see hu.webtown.liferay.portlet.model.EpisodeModel
 * @generated
 */
@JSON(strict = true)
public class EpisodeModelImpl extends BaseModelImpl<Episode>
	implements EpisodeModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a episode model instance should use the {@link hu.webtown.liferay.portlet.model.Episode} interface instead.
	 */
	public static final String TABLE_NAME = "TvT_Episode";
	public static final Object[][] TABLE_COLUMNS = {
			{ "episodeId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "episodeTitle", Types.VARCHAR },
			{ "episodeAirDate", Types.TIMESTAMP },
			{ "episodeNumber", Types.INTEGER },
			{ "episodeDescription", Types.VARCHAR },
			{ "episodeImageUrl", Types.VARCHAR },
			{ "episodeImageUuid", Types.VARCHAR },
			{ "episodeImageTitle", Types.VARCHAR },
			{ "episodeImageVersion", Types.VARCHAR },
			{ "seasonId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table TvT_Episode (episodeId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,episodeTitle VARCHAR(75) null,episodeAirDate DATE null,episodeNumber INTEGER,episodeDescription VARCHAR(75) null,episodeImageUrl VARCHAR(75) null,episodeImageUuid VARCHAR(75) null,episodeImageTitle VARCHAR(75) null,episodeImageVersion VARCHAR(75) null,seasonId LONG)";
	public static final String TABLE_SQL_DROP = "drop table TvT_Episode";
	public static final String ORDER_BY_JPQL = " ORDER BY episode.episodeAirDate ASC";
	public static final String ORDER_BY_SQL = " ORDER BY TvT_Episode.episodeAirDate ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.hu.webtown.liferay.portlet.model.Episode"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.hu.webtown.liferay.portlet.model.Episode"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.hu.webtown.liferay.portlet.model.Episode"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long SEASONID_COLUMN_BITMASK = 4L;
	public static long EPISODEAIRDATE_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Episode toModel(EpisodeSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Episode model = new EpisodeImpl();

		model.setEpisodeId(soapModel.getEpisodeId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setEpisodeTitle(soapModel.getEpisodeTitle());
		model.setEpisodeAirDate(soapModel.getEpisodeAirDate());
		model.setEpisodeNumber(soapModel.getEpisodeNumber());
		model.setEpisodeDescription(soapModel.getEpisodeDescription());
		model.setEpisodeImageUrl(soapModel.getEpisodeImageUrl());
		model.setEpisodeImageUuid(soapModel.getEpisodeImageUuid());
		model.setEpisodeImageTitle(soapModel.getEpisodeImageTitle());
		model.setEpisodeImageVersion(soapModel.getEpisodeImageVersion());
		model.setSeasonId(soapModel.getSeasonId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Episode> toModels(EpisodeSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Episode> models = new ArrayList<Episode>(soapModels.length);

		for (EpisodeSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.hu.webtown.liferay.portlet.model.Episode"));

	public EpisodeModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _episodeId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEpisodeId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _episodeId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Episode.class;
	}

	@Override
	public String getModelClassName() {
		return Episode.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("episodeId", getEpisodeId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("episodeTitle", getEpisodeTitle());
		attributes.put("episodeAirDate", getEpisodeAirDate());
		attributes.put("episodeNumber", getEpisodeNumber());
		attributes.put("episodeDescription", getEpisodeDescription());
		attributes.put("episodeImageUrl", getEpisodeImageUrl());
		attributes.put("episodeImageUuid", getEpisodeImageUuid());
		attributes.put("episodeImageTitle", getEpisodeImageTitle());
		attributes.put("episodeImageVersion", getEpisodeImageVersion());
		attributes.put("seasonId", getSeasonId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long episodeId = (Long)attributes.get("episodeId");

		if (episodeId != null) {
			setEpisodeId(episodeId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String episodeTitle = (String)attributes.get("episodeTitle");

		if (episodeTitle != null) {
			setEpisodeTitle(episodeTitle);
		}

		Date episodeAirDate = (Date)attributes.get("episodeAirDate");

		if (episodeAirDate != null) {
			setEpisodeAirDate(episodeAirDate);
		}

		Integer episodeNumber = (Integer)attributes.get("episodeNumber");

		if (episodeNumber != null) {
			setEpisodeNumber(episodeNumber);
		}

		String episodeDescription = (String)attributes.get("episodeDescription");

		if (episodeDescription != null) {
			setEpisodeDescription(episodeDescription);
		}

		String episodeImageUrl = (String)attributes.get("episodeImageUrl");

		if (episodeImageUrl != null) {
			setEpisodeImageUrl(episodeImageUrl);
		}

		String episodeImageUuid = (String)attributes.get("episodeImageUuid");

		if (episodeImageUuid != null) {
			setEpisodeImageUuid(episodeImageUuid);
		}

		String episodeImageTitle = (String)attributes.get("episodeImageTitle");

		if (episodeImageTitle != null) {
			setEpisodeImageTitle(episodeImageTitle);
		}

		String episodeImageVersion = (String)attributes.get(
				"episodeImageVersion");

		if (episodeImageVersion != null) {
			setEpisodeImageVersion(episodeImageVersion);
		}

		Long seasonId = (Long)attributes.get("seasonId");

		if (seasonId != null) {
			setSeasonId(seasonId);
		}
	}

	@JSON
	@Override
	public long getEpisodeId() {
		return _episodeId;
	}

	@Override
	public void setEpisodeId(long episodeId) {
		_episodeId = episodeId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getEpisodeTitle() {
		if (_episodeTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _episodeTitle;
		}
	}

	@Override
	public void setEpisodeTitle(String episodeTitle) {
		_episodeTitle = episodeTitle;
	}

	@JSON
	@Override
	public Date getEpisodeAirDate() {
		return _episodeAirDate;
	}

	@Override
	public void setEpisodeAirDate(Date episodeAirDate) {
		_columnBitmask = -1L;

		_episodeAirDate = episodeAirDate;
	}

	@JSON
	@Override
	public int getEpisodeNumber() {
		return _episodeNumber;
	}

	@Override
	public void setEpisodeNumber(int episodeNumber) {
		_episodeNumber = episodeNumber;
	}

	@JSON
	@Override
	public String getEpisodeDescription() {
		if (_episodeDescription == null) {
			return StringPool.BLANK;
		}
		else {
			return _episodeDescription;
		}
	}

	@Override
	public void setEpisodeDescription(String episodeDescription) {
		_episodeDescription = episodeDescription;
	}

	@JSON
	@Override
	public String getEpisodeImageUrl() {
		if (_episodeImageUrl == null) {
			return StringPool.BLANK;
		}
		else {
			return _episodeImageUrl;
		}
	}

	@Override
	public void setEpisodeImageUrl(String episodeImageUrl) {
		_episodeImageUrl = episodeImageUrl;
	}

	@JSON
	@Override
	public String getEpisodeImageUuid() {
		if (_episodeImageUuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _episodeImageUuid;
		}
	}

	@Override
	public void setEpisodeImageUuid(String episodeImageUuid) {
		_episodeImageUuid = episodeImageUuid;
	}

	@JSON
	@Override
	public String getEpisodeImageTitle() {
		if (_episodeImageTitle == null) {
			return StringPool.BLANK;
		}
		else {
			return _episodeImageTitle;
		}
	}

	@Override
	public void setEpisodeImageTitle(String episodeImageTitle) {
		_episodeImageTitle = episodeImageTitle;
	}

	@JSON
	@Override
	public String getEpisodeImageVersion() {
		if (_episodeImageVersion == null) {
			return StringPool.BLANK;
		}
		else {
			return _episodeImageVersion;
		}
	}

	@Override
	public void setEpisodeImageVersion(String episodeImageVersion) {
		_episodeImageVersion = episodeImageVersion;
	}

	@JSON
	@Override
	public long getSeasonId() {
		return _seasonId;
	}

	@Override
	public void setSeasonId(long seasonId) {
		_columnBitmask |= SEASONID_COLUMN_BITMASK;

		if (!_setOriginalSeasonId) {
			_setOriginalSeasonId = true;

			_originalSeasonId = _seasonId;
		}

		_seasonId = seasonId;
	}

	public long getOriginalSeasonId() {
		return _originalSeasonId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Episode.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Episode toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Episode)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EpisodeImpl episodeImpl = new EpisodeImpl();

		episodeImpl.setEpisodeId(getEpisodeId());
		episodeImpl.setGroupId(getGroupId());
		episodeImpl.setCompanyId(getCompanyId());
		episodeImpl.setUserId(getUserId());
		episodeImpl.setUserName(getUserName());
		episodeImpl.setCreateDate(getCreateDate());
		episodeImpl.setModifiedDate(getModifiedDate());
		episodeImpl.setEpisodeTitle(getEpisodeTitle());
		episodeImpl.setEpisodeAirDate(getEpisodeAirDate());
		episodeImpl.setEpisodeNumber(getEpisodeNumber());
		episodeImpl.setEpisodeDescription(getEpisodeDescription());
		episodeImpl.setEpisodeImageUrl(getEpisodeImageUrl());
		episodeImpl.setEpisodeImageUuid(getEpisodeImageUuid());
		episodeImpl.setEpisodeImageTitle(getEpisodeImageTitle());
		episodeImpl.setEpisodeImageVersion(getEpisodeImageVersion());
		episodeImpl.setSeasonId(getSeasonId());

		episodeImpl.resetOriginalValues();

		return episodeImpl;
	}

	@Override
	public int compareTo(Episode episode) {
		int value = 0;

		value = DateUtil.compareTo(getEpisodeAirDate(),
				episode.getEpisodeAirDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Episode)) {
			return false;
		}

		Episode episode = (Episode)obj;

		long primaryKey = episode.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EpisodeModelImpl episodeModelImpl = this;

		episodeModelImpl._originalGroupId = episodeModelImpl._groupId;

		episodeModelImpl._setOriginalGroupId = false;

		episodeModelImpl._originalCompanyId = episodeModelImpl._companyId;

		episodeModelImpl._setOriginalCompanyId = false;

		episodeModelImpl._originalSeasonId = episodeModelImpl._seasonId;

		episodeModelImpl._setOriginalSeasonId = false;

		episodeModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Episode> toCacheModel() {
		EpisodeCacheModel episodeCacheModel = new EpisodeCacheModel();

		episodeCacheModel.episodeId = getEpisodeId();

		episodeCacheModel.groupId = getGroupId();

		episodeCacheModel.companyId = getCompanyId();

		episodeCacheModel.userId = getUserId();

		episodeCacheModel.userName = getUserName();

		String userName = episodeCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			episodeCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			episodeCacheModel.createDate = createDate.getTime();
		}
		else {
			episodeCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			episodeCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			episodeCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		episodeCacheModel.episodeTitle = getEpisodeTitle();

		String episodeTitle = episodeCacheModel.episodeTitle;

		if ((episodeTitle != null) && (episodeTitle.length() == 0)) {
			episodeCacheModel.episodeTitle = null;
		}

		Date episodeAirDate = getEpisodeAirDate();

		if (episodeAirDate != null) {
			episodeCacheModel.episodeAirDate = episodeAirDate.getTime();
		}
		else {
			episodeCacheModel.episodeAirDate = Long.MIN_VALUE;
		}

		episodeCacheModel.episodeNumber = getEpisodeNumber();

		episodeCacheModel.episodeDescription = getEpisodeDescription();

		String episodeDescription = episodeCacheModel.episodeDescription;

		if ((episodeDescription != null) && (episodeDescription.length() == 0)) {
			episodeCacheModel.episodeDescription = null;
		}

		episodeCacheModel.episodeImageUrl = getEpisodeImageUrl();

		String episodeImageUrl = episodeCacheModel.episodeImageUrl;

		if ((episodeImageUrl != null) && (episodeImageUrl.length() == 0)) {
			episodeCacheModel.episodeImageUrl = null;
		}

		episodeCacheModel.episodeImageUuid = getEpisodeImageUuid();

		String episodeImageUuid = episodeCacheModel.episodeImageUuid;

		if ((episodeImageUuid != null) && (episodeImageUuid.length() == 0)) {
			episodeCacheModel.episodeImageUuid = null;
		}

		episodeCacheModel.episodeImageTitle = getEpisodeImageTitle();

		String episodeImageTitle = episodeCacheModel.episodeImageTitle;

		if ((episodeImageTitle != null) && (episodeImageTitle.length() == 0)) {
			episodeCacheModel.episodeImageTitle = null;
		}

		episodeCacheModel.episodeImageVersion = getEpisodeImageVersion();

		String episodeImageVersion = episodeCacheModel.episodeImageVersion;

		if ((episodeImageVersion != null) &&
				(episodeImageVersion.length() == 0)) {
			episodeCacheModel.episodeImageVersion = null;
		}

		episodeCacheModel.seasonId = getSeasonId();

		return episodeCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{episodeId=");
		sb.append(getEpisodeId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", episodeTitle=");
		sb.append(getEpisodeTitle());
		sb.append(", episodeAirDate=");
		sb.append(getEpisodeAirDate());
		sb.append(", episodeNumber=");
		sb.append(getEpisodeNumber());
		sb.append(", episodeDescription=");
		sb.append(getEpisodeDescription());
		sb.append(", episodeImageUrl=");
		sb.append(getEpisodeImageUrl());
		sb.append(", episodeImageUuid=");
		sb.append(getEpisodeImageUuid());
		sb.append(", episodeImageTitle=");
		sb.append(getEpisodeImageTitle());
		sb.append(", episodeImageVersion=");
		sb.append(getEpisodeImageVersion());
		sb.append(", seasonId=");
		sb.append(getSeasonId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("hu.webtown.liferay.portlet.model.Episode");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>episodeId</column-name><column-value><![CDATA[");
		sb.append(getEpisodeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>episodeTitle</column-name><column-value><![CDATA[");
		sb.append(getEpisodeTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>episodeAirDate</column-name><column-value><![CDATA[");
		sb.append(getEpisodeAirDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>episodeNumber</column-name><column-value><![CDATA[");
		sb.append(getEpisodeNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>episodeDescription</column-name><column-value><![CDATA[");
		sb.append(getEpisodeDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>episodeImageUrl</column-name><column-value><![CDATA[");
		sb.append(getEpisodeImageUrl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>episodeImageUuid</column-name><column-value><![CDATA[");
		sb.append(getEpisodeImageUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>episodeImageTitle</column-name><column-value><![CDATA[");
		sb.append(getEpisodeImageTitle());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>episodeImageVersion</column-name><column-value><![CDATA[");
		sb.append(getEpisodeImageVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>seasonId</column-name><column-value><![CDATA[");
		sb.append(getSeasonId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Episode.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Episode.class
		};
	private long _episodeId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _episodeTitle;
	private Date _episodeAirDate;
	private int _episodeNumber;
	private String _episodeDescription;
	private String _episodeImageUrl;
	private String _episodeImageUuid;
	private String _episodeImageTitle;
	private String _episodeImageVersion;
	private long _seasonId;
	private long _originalSeasonId;
	private boolean _setOriginalSeasonId;
	private long _columnBitmask;
	private Episode _escapedModel;
}